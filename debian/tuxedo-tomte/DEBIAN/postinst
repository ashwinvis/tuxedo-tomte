#!/bin/sh
# postinst script for tuxedo-tomte
#
# see: dh_installdeb(1)

# Automatically added by dh_systemd_enable/13ubuntu1~oibaf~f
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'tuxedo-tomte.timer' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'tuxedo-tomte.timer'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'tuxedo-tomte.timer' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'tuxedo-tomte.timer' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_start/13ubuntu1~oibaf~f
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'tuxedo-tomte.service' 'tuxedo-tomte.timer' >/dev/null || true
	fi
fi
# End automatically added section


set -e

case "$1" in
    configure)
		# only run if systemd is active
		if ps --no-headers -o comm 1 | grep 'systemd' > /dev/null; then
			systemd-run tuxedo-tomte configure all
		fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
